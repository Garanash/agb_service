#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö–µ—à–µ–π –ø–∞—Ä–æ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç bcrypt —Ö–µ—à–∏ –≤ sha256_crypt —Ö–µ—à–∏
"""

import sys
import os
sys.path.append('/app')

from database import SessionLocal
from models import User
from passlib.context import CryptContext
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò—Å–ø–æ–ª—å–∑—É–µ–º sha256_crypt –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–æ–¥–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
pwd_context = CryptContext(schemes=['sha256_crypt'], deprecated='auto')

def fix_passwords():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ö–µ—à–∏ –ø–∞—Ä–æ–ª–µ–π –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    db = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = db.query(User).all()
        
        if not users:
            logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            return
        
        logger.info(f'–ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for user in users:
            logger.info(f'–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username}')
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
            if user.username == 'admin':
                password = 'admin123'
            else:
                password = 'password123'
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ö–µ—à
            user.hashed_password = pwd_context.hash(password)
            user.is_password_changed = True
            
            logger.info(f'‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è {user.username}')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.commit()
        logger.info('‚úÖ –í—Å–µ –ø–∞—Ä–æ–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
        logger.info('üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:')
        for user in users:
            if user.username == 'admin':
                logger.info(f'   –ê–¥–º–∏–Ω: {user.username} / admin123')
            else:
                logger.info(f'   {user.username} / password123')
        
    except Exception as e:
        logger.error(f'‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π: {e}')
        db.rollback()
    finally:
        db.close()

if __name__ == '__main__':
    fix_passwords()
