#!/bin/bash

echo "üöÄ –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å Kafka"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! python --version > /dev/null 2>&1; then
    echo "‚ùå Python –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

echo "‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.yml down 2>/dev/null || true
docker-compose -f docker-compose.kafka.yml down 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º Kafka –∫–ª–∞—Å—Ç–µ—Ä
echo "‚òÅÔ∏è –ó–∞–ø—É—Å–∫ Kafka –∫–ª–∞—Å—Ç–µ—Ä–∞..."
docker-compose -f docker-compose.kafka.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Kafka
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Kafka –∫–ª–∞—Å—Ç–µ—Ä–∞..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Kafka
echo "üìä –°—Ç–∞—Ç—É—Å Kafka —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose -f docker-compose.kafka.yml ps

# –°–æ–∑–¥–∞–µ–º —Ç–æ–ø–∏–∫–∏
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–æ–≤ Kafka..."
if [ -f "./scripts/create_topics.sh" ]; then
    chmod +x ./scripts/create_topics.sh
    ./scripts/create_topics.sh
else
    echo "‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–ø–∏–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
cd backend
pip install -r requirements.txt
cd ..

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üåê –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
cd backend
python -m uvicorn main:app --reload --host 0.0.0.0 --port 8000 &
APP_PID=$!
cd ..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 10

# –ó–∞–ø—É—Å–∫–∞–µ–º Kafka consumers
echo "üì® –ó–∞–ø—É—Å–∫ Kafka consumers..."
cd backend
python kafka_service_main.py &
KAFKA_PID=$!
cd ..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ consumers
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ consumers..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "üåê –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8000"
echo "üì± Kafka UI: http://localhost:8080"
echo "üìä API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Kafka
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Kafka..."
if [ -f "./scripts/test_kafka.py" ]; then
    python ./scripts/test_kafka.py
    if [ $? -eq 0 ]; then
        echo "‚úÖ Kafka —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå Kafka —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏"
    fi
else
    echo "‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Kafka –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
echo "üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Kafka..."
if [ -f "./scripts/monitor_kafka.py" ]; then
    python ./scripts/monitor_kafka.py
else
    echo "‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Kafka –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "   üåê –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8000"
echo "   üì± Kafka UI: http://localhost:8080"
echo "   üìä API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è graceful shutdown
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    if [ ! -z "$APP_PID" ]; then
        kill $APP_PID 2>/dev/null || true
    fi
    
    if [ ! -z "$KAFKA_PID" ]; then
        kill $KAFKA_PID 2>/dev/null || true
    fi
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose -f docker-compose.kafka.yml down
    docker-compose -f docker-compose.yml down
    
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    exit 0
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
wait
