#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞—è–≤–æ–∫
"""
import requests
import random
from datetime import datetime, timedelta

API_URL = "http://localhost:8000/api/v1"
ADMIN_USERNAME = "admin"
ADMIN_PASSWORD = "password123"

# –°–ø–∏—Å–∫–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
FIRST_NAMES = ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", "–î–º–∏—Ç—Ä–∏–π", "–°–µ—Ä–≥–µ–π", "–ê–Ω–¥—Ä–µ–π", "–ú–∏—Ö–∞–∏–ª", "–ò–≤–∞–Ω", "–ê–ª–µ–∫—Å–µ–π", "–ü–∞–≤–µ–ª", "–í–ª–∞–¥–∏–º–∏—Ä", "–ù–∏–∫–æ–ª–∞–π",
               "–ú–∞—Ä–∏—è", "–ï–ª–µ–Ω–∞", "–û–ª—å–≥–∞", "–ê–Ω–Ω–∞", "–¢–∞—Ç—å—è–Ω–∞", "–ù–∞—Ç–∞–ª—å—è", "–ò—Ä–∏–Ω–∞", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", "–°–≤–µ—Ç–ª–∞–Ω–∞", "–õ—é–¥–º–∏–ª–∞"]
LAST_NAMES = ["–ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä–æ–≤", "–°–∏–¥–æ—Ä–æ–≤", "–°–º–∏—Ä–Ω–æ–≤", "–ö–æ–∑–ª–æ–≤", "–ù–æ–≤–∏–∫–æ–≤", "–ú–æ—Ä–æ–∑–æ–≤", "–í–æ–ª–∫–æ–≤", "–°–æ–∫–æ–ª–æ–≤", "–õ–µ–±–µ–¥–µ–≤",
              "–ò–≤–∞–Ω–æ–≤–∞", "–ü–µ—Ç—Ä–æ–≤–∞", "–°–∏–¥–æ—Ä–æ–≤–∞", "–°–º–∏—Ä–Ω–æ–≤–∞", "–ö–æ–∑–ª–æ–≤–∞", "–ù–æ–≤–∏–∫–æ–≤–∞", "–ú–æ—Ä–æ–∑–æ–≤–∞", "–í–æ–ª–∫–æ–≤–∞", "–°–æ–∫–æ–ª–æ–≤–∞", "–õ–µ–±–µ–¥–µ–≤–∞"]
COMPANIES = ["–û–û–û \"–ì–æ—Ä–Ω–æ–¥–æ–±—ã–≤–∞—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è\"", "–ó–ê–û \"–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å\"", "–ê–û \"–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ–±—ã—á–∏\"", 
             "–ò–ü –ü–µ—Ç—Ä–æ–≤ –ê.–°.", "–û–û–û \"–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\"", "–ó–ê–û \"–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è\""]
CITIES = ["–ú–æ—Å–∫–≤–∞", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ß–µ–ª—è–±–∏–Ω—Å–∫", "–ö–∞–∑–∞–Ω—å"]

def get_admin_token():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    response = requests.post(
        f"{API_URL}/auth/login",
        json={
            "username": ADMIN_USERNAME,
            "password": ADMIN_PASSWORD
        }
    )
    if response.status_code == 200:
        return response.json()["access_token"]
    else:
        print(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}, {response.text}")
        return None

def create_users(token, count=20):
    """–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    headers = {"Authorization": f"Bearer {token}"}
    created_users = {"customers": [], "contractors": []}
    
    for i in range(count):
        role = "customer" if i % 2 == 0 else "contractor"
        first_name = random.choice(FIRST_NAMES)
        last_name = random.choice(LAST_NAMES)
        username = f"test_{role}_{i+50}"
        email = f"{username}@test.com"
        
        user_data = {
            "username": username,
            "email": email,
            "password": "password123",
            "first_name": first_name,
            "last_name": last_name,
            "phone": f"+7-900-{random.randint(100, 999)}-{random.randint(1000, 9999)}",
            "role": role
        }
        
        response = requests.post(f"{API_URL}/auth/register", json=user_data)
        if response.status_code == 201 or response.status_code == 200:
            user = response.json()
            created_users[f"{role}s"].append(user)
            print(f"‚úì –°–æ–∑–¥–∞–Ω {role}: {username}")
        else:
            print(f"‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {username}: {response.status_code}")
    
    return created_users

def create_requests(customer_users, count=50):
    """–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫–∏ –æ—Ç –∏–º–µ–Ω–∏ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤"""
    equipment_types = ["–≠–∫—Å–∫–∞–≤–∞—Ç–æ—Ä", "–ë—É–ª—å–¥–æ–∑–µ—Ä", "–ì—Ä—É–∑–æ–≤–∏–∫", "–ö—Ä–∞–Ω", "–ü–æ–≥—Ä—É–∑—á–∏–∫"]
    request_types = ["–†–µ–º–æ–Ω—Ç –≥–∏–¥—Ä–∞–≤–ª–∏–∫–∏", "–ó–∞–º–µ–Ω–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", 
                     "–†–µ–º–æ–Ω—Ç —ç–ª–µ–∫—Ç—Ä–∏–∫–∏", "–ó–∞–º–µ–Ω–∞ –¥–µ—Ç–∞–ª–µ–π"]
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–∫–∞–∑—á–∏–∫–æ–≤
    customer_credentials = [
        {"username": "customer1", "password": "password123"},
        {"username": "customer2", "password": "password123"},
        {"username": "customer3", "password": "password123"},
    ]
    
    created_count = 0
    for i in range(count):
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞
        cred = random.choice(customer_credentials)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫–∞
        login_response = requests.post(
            f"{API_URL}/auth/login",
            json=cred
        )
        
        if login_response.status_code != 200:
            print(f"‚úó –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞ {cred['username']}")
            continue
        
        customer_token = login_response.json()["access_token"]
        
        equipment = random.choice(equipment_types)
        request_type = random.choice(request_types)
        
        request_data = {
            "title": f"{request_type} {equipment}",
            "description": f"–¢—Ä–µ–±—É–µ—Ç—Å—è {request_type.lower()} –¥–ª—è {equipment.lower()}. –°—Ä–æ—á–Ω–∞—è –∑–∞—è–≤–∫–∞.",
            "equipment_type": equipment,
            "location_address": f"–≥. {random.choice(CITIES)}, —É–ª. –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, –¥. {random.randint(1, 100)}"
        }
        
        response = requests.post(
            f"{API_URL}/customer/requests",
            json=request_data,
            headers={"Authorization": f"Bearer {customer_token}"}
        )
        
        if response.status_code in [200, 201]:
            created_count += 1
            print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ {i+1}/{count}")
        else:
            print(f"‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ {i+1}: {response.status_code}")
    
    return created_count

def main():
    print("üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    token = get_admin_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        return
    
    print(f"‚úì –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    users = create_users(token, count=30)
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤: {len(users['customers'])}")
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π: {len(users['contractors'])}")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫–∏
    print("\nüìã –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫...")
    requests_count = create_requests(users['customers'], count=50)
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ –∑–∞—è–≤–æ–∫: {requests_count}")
    
    print("\n‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

if __name__ == "__main__":
    main()

