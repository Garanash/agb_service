#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–æ–∫–æ–≤—ã—Ö/—Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import sys
import os
sys.path.insert(0, os.path.dirname(__file__))

from database import SessionLocal
from models import User, ContractorProfile, CustomerProfile, RepairRequest
from sqlalchemy import or_

def delete_test_users():
    """–£–¥–∞–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    db = SessionLocal()
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ email –∏–ª–∏ username
        test_patterns = [
            "%test.com%",
            "%@test",
            "contractor%d",
            "customer%d",
            "test_%",
        ]
        
        # –°—Ç—Ä–æ–∏–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
        conditions = []
        for pattern in test_patterns:
            conditions.append(User.email.like(pattern))
            conditions.append(User.username.like(pattern))
        
        test_users = db.query(User).filter(or_(*conditions)).all()
        
        if not test_users:
            print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            return
        
        deleted_count = 0
        
        from sqlalchemy import text
        
        for user in test_users:
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username} (email: {user.email}, —Ä–æ–ª—å: {user.role})")
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ SQL
            # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –≤—Å–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ—Ç–æ–º —Å–∞–º–∏ –∑–∞—è–≤–∫–∏
            
            # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞—è–≤–æ–∫, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∑–∞–∫–∞–∑—á–∏–∫–æ–º –∏–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º
            requests_result = db.execute(text("SELECT id FROM repair_requests WHERE customer_id = :user_id OR assigned_contractor_id = :user_id"), {"user_id": user.id})
            request_ids = [row[0] for row in requests_result.fetchall()]
            
            # –£–¥–∞–ª—è–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ —ç—Ç–∏ –∑–∞—è–≤–∫–∏
            if request_ids:
                for req_id in request_ids:
                    db.execute(text("DELETE FROM contractor_responses WHERE request_id = :request_id"), {"request_id": req_id})
                print(f"  ‚úì –£–¥–∞–ª–µ–Ω—ã –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –∑–∞—è–≤–∫–∏: {len(request_ids)}")
                db.flush()
            
            # –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫–∏
            if request_ids:
                for req_id in request_ids:
                    db.execute(text("DELETE FROM repair_requests WHERE id = :request_id"), {"request_id": req_id})
                print(f"  ‚úì –£–¥–∞–ª–µ–Ω–æ –∑–∞—è–≤–æ–∫: {len(request_ids)}")
                db.flush()
            
            if user.role == "contractor":
                # –ü–æ–ª—É—á–∞–µ–º contractor_profile_id –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                profile_result = db.execute(text("SELECT id FROM contractor_profiles WHERE user_id = :user_id"), {"user_id": user.id})
                profile_row = profile_result.fetchone()
                if profile_row:
                    contractor_profile_id = profile_row[0]
                    # –£–¥–∞–ª—è–µ–º –æ—Ç–∫–ª–∏–∫–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è (—Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ contractor_profiles.id)
                    result = db.execute(text("DELETE FROM contractor_responses WHERE contractor_id = :contractor_id"), {"contractor_id": contractor_profile_id})
                    if result.rowcount > 0:
                        print(f"  ‚úì –£–¥–∞–ª–µ–Ω–æ –æ—Ç–∫–ª–∏–∫–æ–≤: {result.rowcount}")
                    # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
                    db.execute(text("DELETE FROM contractor_documents WHERE contractor_id = :contractor_id"), {"contractor_id": contractor_profile_id})
                    db.execute(text("DELETE FROM contractor_education WHERE contractor_id = :contractor_id"), {"contractor_id": contractor_profile_id})
                    db.execute(text("DELETE FROM contractor_verifications WHERE contractor_id = :contractor_id"), {"contractor_id": contractor_profile_id})
                    print(f"  ‚úì –£–¥–∞–ª–µ–Ω—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è")
            
            # –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏
            if user.role == "contractor":
                result = db.execute(text("DELETE FROM contractor_profiles WHERE user_id = :user_id"), {"user_id": user.id})
                if result.rowcount > 0:
                    print(f"  ‚úì –£–¥–∞–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è")
            
            if user.role == "customer":
                # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –µ—Å—Ç—å)
                customer_requests = db.execute(text("SELECT id FROM repair_requests WHERE customer_id = :user_id"), {"user_id": user.id})
                customer_req_ids = [row[0] for row in customer_requests.fetchall()]
                if customer_req_ids:
                    for req_id in customer_req_ids:
                        db.execute(text("DELETE FROM contractor_responses WHERE request_id = :request_id"), {"request_id": req_id})
                        db.execute(text("DELETE FROM repair_requests WHERE id = :request_id"), {"request_id": req_id})
                    print(f"  ‚úì –£–¥–∞–ª–µ–Ω–æ –∑–∞—è–≤–æ–∫ –∑–∞–∫–∞–∑—á–∏–∫–∞: {len(customer_req_ids)}")
                
                result = db.execute(text("DELETE FROM customer_profiles WHERE user_id = :user_id"), {"user_id": user.id})
                if result.rowcount > 0:
                    print(f"  ‚úì –£–¥–∞–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫–∞–∑—á–∏–∫–∞")
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = db.execute(text("DELETE FROM users WHERE id = :user_id"), {"user_id": user.id})
            if result.rowcount > 0:
                deleted_count += 1
                print(f"  ‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω")
        
        db.commit()
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        raise
    finally:
        db.close()

if __name__ == "__main__":
    delete_test_users()

