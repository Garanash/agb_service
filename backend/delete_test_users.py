#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–æ–∫–æ–≤—ã—Ö/—Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import sys
import os
sys.path.insert(0, os.path.dirname(__file__))

from database import SessionLocal
from models import User, ContractorProfile, CustomerProfile, RepairRequest
from sqlalchemy import or_

def delete_test_users():
    """–£–¥–∞–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    db = SessionLocal()
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ email –∏–ª–∏ username
        test_patterns = [
            "%test.com%",
            "%@test",
            "contractor%d",
            "customer%d",
            "test_%",
        ]
        
        # –°—Ç—Ä–æ–∏–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
        conditions = []
        for pattern in test_patterns:
            conditions.append(User.email.like(pattern))
            conditions.append(User.username.like(pattern))
        
        test_users = db.query(User).filter(or_(*conditions)).all()
        
        if not test_users:
            print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            return
        
        deleted_count = 0
        
        for user in test_users:
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username} (email: {user.email}, —Ä–æ–ª—å: {user.role})")
            
            # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤
            if user.role == "customer":
                requests = db.query(RepairRequest).filter(RepairRequest.customer_id == user.id).all()
                for req in requests:
                    db.delete(req)
                    print(f"  ‚úì –£–¥–∞–ª–µ–Ω–∞ –∑–∞—è–≤–∫–∞ {req.id}")
            
            # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
            if user.role == "contractor":
                profile = db.query(ContractorProfile).filter(ContractorProfile.user_id == user.id).first()
                if profile:
                    db.delete(profile)
                    print(f"  ‚úì –£–¥–∞–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {profile.id}")
            
            if user.role == "customer":
                profile = db.query(CustomerProfile).filter(CustomerProfile.user_id == user.id).first()
                if profile:
                    db.delete(profile)
                    print(f"  ‚úì –£–¥–∞–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫–∞–∑—á–∏–∫–∞ {profile.id}")
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db.delete(user)
            deleted_count += 1
        
        db.commit()
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        raise
    finally:
        db.close()

if __name__ == "__main__":
    delete_test_users()

