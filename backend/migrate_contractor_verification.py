#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy import create_engine, text
from database import DATABASE_URL
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def run_migration():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    engine = create_engine(DATABASE_URL)
    
    with engine.connect() as conn:
        try:
            # –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            trans = conn.begin()
            
            logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π...")
            
            # 1. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ contractor_profiles
            logger.info("üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ contractor_profiles...")
            conn.execute(text("""
                ALTER TABLE contractor_profiles 
                ADD COLUMN IF NOT EXISTS passport_series VARCHAR,
                ADD COLUMN IF NOT EXISTS passport_number VARCHAR,
                ADD COLUMN IF NOT EXISTS passport_issued_by VARCHAR,
                ADD COLUMN IF NOT EXISTS passport_issued_date VARCHAR,
                ADD COLUMN IF NOT EXISTS passport_issued_code VARCHAR,
                ADD COLUMN IF NOT EXISTS birth_date VARCHAR,
                ADD COLUMN IF NOT EXISTS birth_place VARCHAR,
                ADD COLUMN IF NOT EXISTS inn VARCHAR
            """))
            
            # 2. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ contractor_profiles
            logger.info("üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ contractor_profiles...")
            conn.execute(text("""
                ALTER TABLE contractor_profiles 
                ADD COLUMN IF NOT EXISTS profile_completion_status VARCHAR DEFAULT 'incomplete',
                ADD COLUMN IF NOT EXISTS security_verified BOOLEAN DEFAULT FALSE,
                ADD COLUMN IF NOT EXISTS manager_verified BOOLEAN DEFAULT FALSE,
                ADD COLUMN IF NOT EXISTS security_verified_at TIMESTAMP WITH TIME ZONE,
                ADD COLUMN IF NOT EXISTS manager_verified_at TIMESTAMP WITH TIME ZONE,
                ADD COLUMN IF NOT EXISTS security_verified_by INTEGER REFERENCES users(id),
                ADD COLUMN IF NOT EXISTS manager_verified_by INTEGER REFERENCES users(id)
            """))
            
            # 3. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É contractor_education
            logger.info("üìù –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É contractor_education...")
            conn.execute(text("""
                CREATE TABLE IF NOT EXISTS contractor_education (
                    id SERIAL PRIMARY KEY,
                    contractor_id INTEGER NOT NULL REFERENCES contractor_profiles(id) ON DELETE CASCADE,
                    institution_name VARCHAR NOT NULL,
                    degree VARCHAR NOT NULL,
                    specialization VARCHAR NOT NULL,
                    graduation_year INTEGER,
                    diploma_number VARCHAR,
                    document_path VARCHAR,
                    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
                )
            """))
            
            # 4. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É contractor_documents
            logger.info("üìù –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É contractor_documents...")
            conn.execute(text("""
                CREATE TABLE IF NOT EXISTS contractor_documents (
                    id SERIAL PRIMARY KEY,
                    contractor_id INTEGER NOT NULL REFERENCES contractor_profiles(id) ON DELETE CASCADE,
                    document_type VARCHAR NOT NULL,
                    document_name VARCHAR NOT NULL,
                    document_path VARCHAR NOT NULL,
                    file_size INTEGER,
                    mime_type VARCHAR,
                    verification_status VARCHAR NOT NULL DEFAULT 'pending',
                    verification_notes TEXT,
                    verified_by INTEGER REFERENCES users(id),
                    verified_at TIMESTAMP WITH TIME ZONE,
                    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
                )
            """))
            
            # 5. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É contractor_verifications
            logger.info("üìù –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É contractor_verifications...")
            conn.execute(text("""
                CREATE TABLE IF NOT EXISTS contractor_verifications (
                    id SERIAL PRIMARY KEY,
                    contractor_id INTEGER NOT NULL UNIQUE REFERENCES contractor_profiles(id) ON DELETE CASCADE,
                    profile_completed BOOLEAN DEFAULT FALSE,
                    documents_uploaded BOOLEAN DEFAULT FALSE,
                    security_check_passed BOOLEAN DEFAULT FALSE,
                    manager_approval BOOLEAN DEFAULT FALSE,
                    overall_status VARCHAR NOT NULL DEFAULT 'incomplete',
                    security_notes TEXT,
                    manager_notes TEXT,
                    security_checked_by INTEGER REFERENCES users(id),
                    manager_checked_by INTEGER REFERENCES users(id),
                    security_checked_at TIMESTAMP WITH TIME ZONE,
                    manager_checked_at TIMESTAMP WITH TIME ZONE,
                    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
                )
            """))
            
            # 6. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            logger.info("üìù –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã...")
            conn.execute(text("""
                CREATE INDEX IF NOT EXISTS idx_contractor_education_contractor_id 
                ON contractor_education(contractor_id)
            """))
            
            conn.execute(text("""
                CREATE INDEX IF NOT EXISTS idx_contractor_documents_contractor_id 
                ON contractor_documents(contractor_id)
            """))
            
            conn.execute(text("""
                CREATE INDEX IF NOT EXISTS idx_contractor_documents_type 
                ON contractor_documents(document_type)
            """))
            
            conn.execute(text("""
                CREATE INDEX IF NOT EXISTS idx_contractor_verifications_status 
                ON contractor_verifications(overall_status)
            """))
            
            # 7. –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
            logger.info("üìù –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π...")
            conn.execute(text("""
                INSERT INTO contractor_verifications (contractor_id, overall_status)
                SELECT id, 'incomplete'
                FROM contractor_profiles
                WHERE id NOT IN (SELECT contractor_id FROM contractor_verifications)
            """))
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            trans.commit()
            logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            
        except Exception as e:
            # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            trans.rollback()
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
            raise

if __name__ == "__main__":
    run_migration()
