#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
from database import get_db
from models import User, ContractorProfile, CustomerProfile
from api.v1.dependencies import get_password_hash, generate_email_verification_token
import logging

logger = logging.getLogger(__name__)

def create_test_users():
    db = next(get_db())
    
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    test_users = [
        # –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏
        {'username': 'contractor2', 'email': 'contractor2@test.com', 'role': 'contractor', 'first_name': '–ü–µ—Ç—Ä', 'last_name': '–ü–µ—Ç—Ä–æ–≤'},
        {'username': 'contractor3', 'email': 'contractor3@test.com', 'role': 'contractor', 'first_name': '–°–µ—Ä–≥–µ–π', 'last_name': '–°–µ—Ä–≥–µ–µ–≤'},
        
        # –ó–∞–∫–∞–∑—á–∏–∫–∏
        {'username': 'customer1', 'email': 'customer1@test.com', 'role': 'customer', 'first_name': '–ê–Ω–Ω–∞', 'last_name': '–ê–Ω–Ω–æ–≤–∞'},
        {'username': 'customer2', 'email': 'customer2@test.com', 'role': 'customer', 'first_name': '–ú–∞—Ä–∏—è', 'last_name': '–ú–∞—Ä—å–µ–≤–∞'},
        
        # –°–ë —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç
        {'username': 'security1', 'email': 'security1@test.com', 'role': 'security', 'first_name': '–ê–ª–µ–∫—Å–µ–π', 'last_name': '–ê–ª–µ–∫—Å–µ–µ–≤'},
        
        # HR —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç
        {'username': 'hr1', 'email': 'hr1@test.com', 'role': 'hr', 'first_name': '–ï–ª–µ–Ω–∞', 'last_name': '–ï–ª–µ–Ω–æ–≤–∞'},
        
        # –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Å–µ—Ä–≤–∏—Å—É
        {'username': 'manager1', 'email': 'manager1@test.com', 'role': 'manager', 'first_name': '–î–º–∏—Ç—Ä–∏–π', 'last_name': '–î–º–∏—Ç—Ä–∏–µ–≤'},
    ]
    
    created_users = []
    
    for user_data in test_users:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            existing_user = db.query(User).filter(User.username == user_data['username']).first()
            if existing_user:
                print(f'‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data["username"]} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º')
                continue
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            verification_token = generate_email_verification_token()
            user = User(
                username=user_data['username'],
                email=user_data['email'],
                hashed_password=get_password_hash('password123'),
                first_name=user_data['first_name'],
                last_name=user_data['last_name'],
                role=user_data['role'],
                is_active=True,
                email_verified=True,  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
                email_verification_token=verification_token
            )
            
            db.add(user)
            db.commit()
            db.refresh(user)
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
            if user_data['role'] == 'contractor':
                contractor_profile = ContractorProfile(
                    user_id=user.id,
                    first_name=user_data['first_name'],
                    last_name=user_data['last_name'],
                    patronymic='',
                    phone='+7(999)123-45-67',
                    email=user_data['email'],
                    telegram_username=f'@{user_data["username"]}',
                    specializations=['–ë—É—Ä–µ–Ω–∏–µ', '–†–µ–º–æ–Ω—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'],
                    equipment_brands_experience=['Atlas Copco', 'Sandvik'],
                    certifications=['–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'],
                    work_regions=['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'],
                    hourly_rate=1500,
                    availability_status='available'
                )
                db.add(contractor_profile)
                
            elif user_data['role'] == 'customer':
                customer_profile = CustomerProfile(
                    user_id=user.id,
                    company_name=f'–û–û–û {user_data["first_name"]} {user_data["last_name"]}',
                    contact_person=f'{user_data["first_name"]} {user_data["last_name"]}',
                    phone='+7(999)123-45-67',
                    email=user_data['email'],
                    address='–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1',
                    inn='1234567890',
                    kpp='123456789',
                    ogrn='1234567890123',
                    equipment_brands=['Atlas Copco'],
                    equipment_types=['–ë—É—Ä–æ–≤—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏'],
                    mining_operations=['–û—Ç–∫—Ä—ã—Ç—ã–µ —Ä–∞–±–æ—Ç—ã'],
                    service_history='–†–∞–±–æ—Ç–∞–µ–º —Å 2020 –≥–æ–¥–∞'
                )
                db.add(customer_profile)
            
            db.commit()
            created_users.append(user)
            print(f'‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} ({user.email}) - {user.role}')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_data["username"]}: {e}')
            db.rollback()
    
    print(f'\nüìä –ò—Ç–æ–≥–æ —Å–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(created_users)}')
    print('üìã –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:')
    for user in created_users:
        print(f'  - {user.username} ({user.email}) - {user.role}')

if __name__ == "__main__":
    create_test_users()
